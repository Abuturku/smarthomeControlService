
package de.mosbach.lan.smarthome.services;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.7.0
 * 2016-03-24T11:00:25.340+01:00
 * Generated source version: 2.7.0
 * 
 */
public final class WindowService_WindowService_Client {

    private static final QName SERVICE_NAME = new QName("http://services.smarthome.lan.mosbach.de/", "windowService");

    private WindowService_WindowService_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = WindowService_Service.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        WindowService_Service ss = new WindowService_Service(wsdlURL, SERVICE_NAME);
        WindowService port = ss.getWindowService();  
        
        {
        System.out.println("Invoking getWindowById...");
        long _getWindowById_windowId = 0;
        de.mosbach.lan.smarthome.services.Window _getWindowById__return = port.getWindowById(_getWindowById_windowId);
        System.out.println("getWindowById.result=" + _getWindowById__return);


        }
        {
        System.out.println("Invoking openWindow...");
        java.lang.String _openWindow_roomName = "";
        boolean _openWindow__return = port.openWindow(_openWindow_roomName);
        System.out.println("openWindow.result=" + _openWindow__return);


        }
        {
        System.out.println("Invoking addWindow...");
        java.lang.String _addWindow_roomName = "";
        long _addWindow__return = port.addWindow(_addWindow_roomName);
        System.out.println("addWindow.result=" + _addWindow__return);


        }
        {
        System.out.println("Invoking getAllWindows...");
        java.util.List<de.mosbach.lan.smarthome.services.Window> _getAllWindows__return = port.getAllWindows();
        System.out.println("getAllWindows.result=" + _getAllWindows__return);


        }
        {
        System.out.println("Invoking removeWindow...");
        long _removeWindow_windowId = 0;
        port.removeWindow(_removeWindow_windowId);


        }
        {
        System.out.println("Invoking closeWindow...");
        java.lang.String _closeWindow_roomName = "";
        boolean _closeWindow__return = port.closeWindow(_closeWindow_roomName);
        System.out.println("closeWindow.result=" + _closeWindow__return);


        }
        {
        System.out.println("Invoking getWindowsByRoomName...");
        java.lang.String _getWindowsByRoomName_roomName = "";
        java.util.List<de.mosbach.lan.smarthome.services.Window> _getWindowsByRoomName__return = port.getWindowsByRoomName(_getWindowsByRoomName_roomName);
        System.out.println("getWindowsByRoomName.result=" + _getWindowsByRoomName__return);


        }

        System.exit(0);
    }

}
